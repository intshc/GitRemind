spring:
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
#  datasource:
#    url: jdbc:mysql://localhost:3306/GitUser?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    username: tester
#    password: test

  h2:
    console:
      enabled: true  # H2 Console을 사용할지 여부 (H2 Console은 H2 Database를 UI로 제공해주는 기능)
      path: /h2-console  # H2 Console의 Path
  # Database Setting Info (Database를 H2로 사용하기 위해 H2연결 정보 입력)
  datasource:
    driver-class-name: org.h2.Driver  # Database를 H2로 사용하겠다.
    url: jdbc:h2:mem:test  # H2 접속 정보
    username: sa  # H2 접속 시 입력할 username 정보 (원하는 것으로 입력)
    password:  # H2 접속 시 입력할 password 정보 (원하는 것으로 입력)
  config:
    import: application-API-Key.yml , server-URL.yml
  security:
    oauth2:
      client:
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
        registration:
          naver:
            client-id: ${naver.clientId}
            client-secret: ${naver.clientSecret}
            redirect-uri: ${server.url}/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            client-name: Naver
            scope:
              - name
              - email
              - profile_image
          google:
            client-id: ${google.clientId}
            client-secret: ${google.clientSecret}
            scope:
              - profile
              - email
            redirect-uri: ${server.url}/login/oauth2/code/google
          github:
            client-id: ${github.clientId}
            client-secret: ${github.clientSecret}
            redirect-uri: ${server.url}/login/oauth2/code/github